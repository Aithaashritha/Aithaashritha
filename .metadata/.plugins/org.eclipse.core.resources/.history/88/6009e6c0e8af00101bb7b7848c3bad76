package com.example.convergenceintegration.controller;

import org.springframework.web.bind.annotation.*;
import java.util.List;
import com.example.convergenceintegration.entity.DataTransfer;
import com.example.convergenceintegration.service.DataTransferService;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/transfers")
@RequiredArgsConstructor
public class DataTransferController {

    private final DataTransferService service;

    // GET all transfers
    @GetMapping
    public List<DataTransfer> getAllTransfers() {
        return service.getAllTransfers();
    }

    // GET transfer by ID
    @GetMapping("/{id}")
    public DataTransfer getTransferById(@PathVariable Long id) {
        return service.getTransferById(id);
    }

    // POST create transfer
    @PostMapping
    public DataTransfer createTransfer(@RequestBody DataTransfer transfer) {
        return service.createTransfer(transfer);
    }

    // PUT update transfer
    @PutMapping("/{id}")
    public DataTransfer updateTransfer(@PathVariable Long id, @RequestBody DataTransfer transfer) {
        return service.updateTransfer(id, transfer);
    }

    // DELETE transfer
    @DeleteMapping("/{id}")
    public String deleteTransfer(@PathVariable Long id) {
        service.deleteTransfer(id);
        return "Data transfer with ID " + id + " deleted successfully.";
    }

    // POST initiate transfer
    @PostMapping("/initiate")
    public DataTransfer initiateTransfer(@RequestParam String source,
                                         @RequestParam String target,
                                         @RequestParam(defaultValue = "FULL") String type) {
        return service.initiateTransfer(source, target, type);
    }
}
